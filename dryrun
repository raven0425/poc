import boto3
import datetime

def delete_old_snapshots(dry_run=False):
    # Define AWS credentials and region
    aws_access_key = 'YOUR_ACCESS_KEY'
    aws_secret_key = 'YOUR_SECRET_KEY'
    region_name = 'us-west-2'  # Replace with your desired region

    # Create an RDS client
    client = boto3.client('rds', aws_access_key_id=aws_access_key, aws_secret_access_key=aws_secret_key, region_name=region_name)

    # Get all manual snapshots
    response = client.describe_db_snapshots(SnapshotType='manual')

    # Get the current date
    current_date = datetime.datetime.now()

    # Iterate through snapshots and delete if older than 90 days and not containing "delete" in the name
    for snapshot in response['DBSnapshots']:
        snapshot_id = snapshot['DBSnapshotIdentifier']
        snapshot_create_time = snapshot['SnapshotCreateTime']

        if "delete" not in snapshot_id.lower() and (current_date - snapshot_create_time).days > 90:
            if dry_run:
                print(f"Dry run: Would delete snapshot: {snapshot_id}")
            else:
                print(f"Deleting snapshot: {snapshot_id}")
                client.delete_db_snapshot(DBSnapshotIdentifier=snapshot_id)

if __name__ == "__main__":
    # Set dry_run to True for a dry run (simulation), set to False to perform the actual deletion
    dry_run = True
    delete_old_snapshots(dry_run=dry_run)
